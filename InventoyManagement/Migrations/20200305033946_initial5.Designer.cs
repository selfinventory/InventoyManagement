// <auto-generated />
using System;
using InventoyManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InventoyManagement.Migrations
{
    [DbContext(typeof(RunModel))]
    [Migration("20200305033946_initial5")]
    partial class initial5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("InventoyManagement.Models.BrandsModel", b =>
                {
                    b.Property<string>("BrandID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("BrandName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("BrandStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BrandID");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("InventoyManagement.Models.CompaniesModel", b =>
                {
                    b.Property<string>("CompanyRegistrationID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("CompanyAdd1")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CompanyAdd2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CompanyAdd3")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CompanyAdd4")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CompanyCity")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CompanyCounty")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CompanyState")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CompanyTelOffice")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("CompanyRegistrationID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("InventoyManagement.Models.CustomersModel", b =>
                {
                    b.Property<string>("CustomerID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("CustomerAdd1")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CustomerAdd2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CustomerAdd3")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CustomerAdd4")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CustomerCity")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CustomerCounty")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CustomerDateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("CustomerPhoto")
                        .HasColumnType("longblob");

                    b.Property<string>("CustomerState")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CustomerTelMobile")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CustomerTelOffice")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("InventoyManagement.Models.FinanceModel", b =>
                {
                    b.Property<string>("FinanceGLID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinanceGLDesc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("SupplierInfoSupplierRegistrationID")
                        .HasColumnType("int");

                    b.HasKey("FinanceGLID");

                    b.HasIndex("SupplierInfoSupplierRegistrationID");

                    b.ToTable("Finances");
                });

            modelBuilder.Entity("InventoyManagement.Models.InvoicesModel", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<float>("CostValue")
                        .HasColumnType("float");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateInvoice")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("DiscountValue")
                        .HasColumnType("float");

                    b.Property<float>("TaxPercentage")
                        .HasColumnType("float");

                    b.Property<float>("TaxValue")
                        .HasColumnType("float");

                    b.Property<float>("TotalValue")
                        .HasColumnType("float");

                    b.HasKey("InvoiceID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("InventoyManagement.Models.LaborModel", b =>
                {
                    b.Property<string>("LaborId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LaborDesc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("LaborPrice")
                        .HasColumnType("float");

                    b.Property<int>("LaborStatus")
                        .HasColumnType("int");

                    b.HasKey("LaborId");

                    b.ToTable("Labor");
                });

            modelBuilder.Entity("InventoyManagement.Models.ModelPartsModel", b =>
                {
                    b.Property<string>("ModelPartsID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("BrandsModelBrandID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModelPartsCC")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ModelPartsDesc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ModelPartsYear")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ModelPartsID");

                    b.HasIndex("BrandsModelBrandID");

                    b.ToTable("ModelParts");
                });

            modelBuilder.Entity("InventoyManagement.Models.PartsFotoModel", b =>
                {
                    b.Property<string>("PartsFotoID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PartsFotoDesc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PartsFotoStatus")
                        .HasColumnType("int");

                    b.Property<byte[]>("PartsStatusImage")
                        .HasColumnType("longblob");

                    b.HasKey("PartsFotoID");

                    b.ToTable("PartsFoto");
                });

            modelBuilder.Entity("InventoyManagement.Models.PartsGroupModel", b =>
                {
                    b.Property<string>("PartsGroupID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModelPartsModelModelPartsID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("PartsGroupDesc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("PartsGroupImage")
                        .HasColumnType("longblob");

                    b.Property<int>("PartsStatus")
                        .HasColumnType("int");

                    b.HasKey("PartsGroupID");

                    b.HasIndex("ModelPartsModelModelPartsID");

                    b.ToTable("PartsGroup");
                });

            modelBuilder.Entity("InventoyManagement.Models.PartsModel", b =>
                {
                    b.Property<string>("PartsID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinanceInfoFinanceGLID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("PartsDesc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PartsGroupModelPartsGroupID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("PartsManufactureYear")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PartsPrice")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PartsQty")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PartsRackNo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PartsSellPrice")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PartsStatus")
                        .HasColumnType("int");

                    b.HasKey("PartsID");

                    b.HasIndex("FinanceInfoFinanceGLID");

                    b.HasIndex("PartsGroupModelPartsGroupID");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("InventoyManagement.Models.PaymentModeModel", b =>
                {
                    b.Property<string>("PaymentTypeid")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PaymentTypeDesc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PaymentTypeStatus")
                        .HasColumnType("int");

                    b.HasKey("PaymentTypeid");

                    b.ToTable("PaymentMode");
                });

            modelBuilder.Entity("InventoyManagement.Models.SuppliersModel", b =>
                {
                    b.Property<int>("SupplierRegistrationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SupplierAdd1")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SupplierAdd2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SupplierAdd3")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SupplierAdd4")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SupplierCity")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SupplierCounty")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SupplierEmail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SupplierState")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SupplierStatus")
                        .HasColumnType("int");

                    b.Property<string>("SupplierTelOffice")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SupplierRegistrationID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("InventoyManagement.Models.TaxModel", b =>
                {
                    b.Property<string>("TaxID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("TaxAmount")
                        .HasColumnType("float");

                    b.Property<string>("TaxDesc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TaxStatus")
                        .HasColumnType("int");

                    b.HasKey("TaxID");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("InventoyManagement.Models.UsersModel", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LoginDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Retry")
                        .HasColumnType("int");

                    b.Property<int>("UserGroup")
                        .HasColumnType("int");

                    b.Property<string>("UserInfo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("UserPassword")
                        .HasColumnType("longblob");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InventoyManagement.Models.FinanceModel", b =>
                {
                    b.HasOne("InventoyManagement.Models.SuppliersModel", "SupplierInfo")
                        .WithMany()
                        .HasForeignKey("SupplierInfoSupplierRegistrationID");
                });

            modelBuilder.Entity("InventoyManagement.Models.ModelPartsModel", b =>
                {
                    b.HasOne("InventoyManagement.Models.BrandsModel", null)
                        .WithMany("ModelPartsBrands")
                        .HasForeignKey("BrandsModelBrandID");
                });

            modelBuilder.Entity("InventoyManagement.Models.PartsGroupModel", b =>
                {
                    b.HasOne("InventoyManagement.Models.ModelPartsModel", null)
                        .WithMany("PartsGroup")
                        .HasForeignKey("ModelPartsModelModelPartsID");
                });

            modelBuilder.Entity("InventoyManagement.Models.PartsModel", b =>
                {
                    b.HasOne("InventoyManagement.Models.FinanceModel", "FinanceInfo")
                        .WithMany()
                        .HasForeignKey("FinanceInfoFinanceGLID");

                    b.HasOne("InventoyManagement.Models.PartsGroupModel", null)
                        .WithMany("PartsList")
                        .HasForeignKey("PartsGroupModelPartsGroupID");
                });
#pragma warning restore 612, 618
        }
    }
}
